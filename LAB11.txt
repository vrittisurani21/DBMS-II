Perform the following queries using Regex:
Part – A Create collection named “employee” and insert following 10 documents into it.
 employee
EID ENAME GENDER JOININGDATE SALARY CITY
1 Nick Male 01-JAN-13 4000 London
2 Julian Female 01-OCT-14 3000 New York
3 Roy Male 01-JUN-16 3500 London
4 Tom Male NULL 4500 London
5 Jerry Male 01-FEB-13 2800 Sydney
6 Philip Male 01-JAN-15 7000 New York
7 Sara Female 01-AUG-17 4800 Sydney
8 Emily Female 01-JAN-15 5500 New York
9 Michael Male NULL 6500 London
10 John Male 01-JAN-15 8800 London


1. Find employees whose name start with E.
db.employee.find({ENAME: {$regex: "^E"}});


2. Find employees whose name ends with n.
db.employee.find({ENAME: {$regex: "n$"}});


3. Find employees whose name starts with S or M in your collection.
db.employee.find({ENAME: {$regex: "^[SM]"}});


4. Find employees where city starts with A to M in your collection.
db.employee.find({CITY: {$regex: "^[A-M]"}});


5. Find employees where city name ends in ‘ney’.
db.employee.find({CITY: {$regex: "ney$"}});


6. Display employee info whose name contains n. (Both uppercase(N) and lowercase(n))
db.employee.find({ENAME: {$regex: "n", $options: "i"}});

7. Display employee info whose name starts with E and having 5 characters.
db.employee.find({ENAME: {$regex: "^E.{4}$"}});


8. Display employee whose name start with S and ends in a.
db.employee.find({ENAME: {$regex: "^S.*a$"}});


9. Display EID, ENAME, CITY and SALARY whose name starts with ‘Phi’.
db.employee.find({ENAME: {$regex: "^Phi"}}, {EID: 1, ENAME: 1, CITY: 1, SALARY: 1});


10. Display ENAME, JOININGDATE and CITY whose city contains ‘dne’ as three letters in city name.
db.employee.find({CITY: {$regex: "dne"}}, {ENAME: 1, JOININGDATE: 1, CITY: 1});


11. Display ENAME, JOININGDATE and CITY who does not belongs to city London or Sydney.
db.employee.find({CITY: {$nin: ["London", "Sydney"]}}, {ENAME: 1, JOININGDATE: 1, CITY: 1});

 
12. Find employees whose names start with 'J'.
db.employee.find({ENAME: {$regex: "^J"}});


13. Find employees whose names end with 'y'.
db.employee.find({ENAME: {$regex: "y$"}});


14. Find employees whose names contain the letter 'a'.
db.employee.find({ENAME: {$regex: "a"}});


15. Find employees whose names contain either 'a' or 'e'.
db.employee.find({ENAME: {$regex: "[ae]"}});


16. Find employees whose names start with 'J' and end with 'n'.
db.employee.find({ENAME: {$regex: "^J.*n$"}});


17. Find employees whose CITY starts with 'New'.
db.employee.find({CITY: {$regex: "^New"}});


18. Find employees whose CITY does not start with 'L'
db.employee.find({CITY: {$not: {$regex: "^L"}}});


19. Find employees whose CITY contains the word 'York'.
db.employee.find({CITY: {$regex: "York"}}); 


20. Find employees whose names have two consecutive vowels (a, e, i, o, u).
db.employee.find({ENAME: {$regex: "[aeiou]{2}"}});


21. Find employees whose names have three or more letters.
db.employee.find({ENAME: {$regex: "^.{3,}$"}});


22. Find employees whose names have exactly 4 letters.
db.employee.find({ENAME: {$regex: "^.{4}$"}});


23. Find employees whose names start with either 'S' or 'M'.
db.employee.find({ENAME: {$regex: "^[SM]"}});


24. Find employees whose names contain 'il' anywhere.
db.employee.find({ENAME: {$regex: "il"}});


25. Find employees whose names do not contain 'a'.
db.employee.find({ENAME: {$not: {$regex: "a"}}});


26. Find employees whose names contain any digit.
db.employee.find({ENAME: {$regex: "\\d"}});


27. Find employees whose names contain exactly one vowel.
db.employee.find({ENAME: {$regex: "^[^aeiou][aeiou][^aeiou]$"}});


28. Find employees whose names start with any uppercase letter followed by any lowercase letter
db.employee.find({ENAME: {$regex: "^[A-Z][a-z]"}});